#1️⃣ network_scanner.py - Scanner les machines actives
import nmap

def scan_network(network):
    scanner = nmap.PortScanner()
    scanner.scan(hosts=network, arguments="-sn")  # Scan sans port
    active_hosts = [host for host in scanner.all_hosts()]
    return active_hosts

#2️⃣ port_scanner.py - Scanner les ports ouverts
import nmap

def scan_ports(ip):
    scanner = nmap.PortScanner()
    scanner.scan(ip, arguments="-sV")  # Détecte les versions des services
    open_ports = {}
    
    for proto in scanner[ip].all_protocols():
        ports = scanner[ip][proto]
        for port, data in ports.items():
            open_ports[port] = {"service": data.get("name", "unknown"), "version": data.get("version", "unknown")}
    
    return open_ports

#3️⃣ vulnerability_checker.py - Vérifier les vulnérabilités
import requests

def check_vulnerabilities(service, version):
    query = f"{service} {version}"
    url = f"https://cve.circl.lu/api/search/{query}"
    
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        return data.get("data", [])
    return []

#4️⃣ report_generator.py - Générer un rapport
import csv

def save_report(data, filename="vulnerability_report.csv"):
    with open(filename, "w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["IP", "Port", "Service", "Version", "Vulnérabilités"])
        for ip, ports in data.items():
            for port, details in ports.items():
                writer.writerow([ip, port, details['service'], details['version'], ", ".join(details['vulns'])])


#5️⃣-scanner.py - Fichier principal
from network_scanner import scan_network
from port_scanner import scan_ports
from vulnerability_checker import check_vulnerabilities
from report_generator import save_report

# Définir la plage IP
network = "192.168.1.0/24"  # À modifier selon votre réseau
machines = scan_network(network)

scan_results = {}

for machine in machines:
    print(f"Scanning {machine}...")
    services = scan_ports(machine)
    
    for port, details in services.items():
        vulns = check_vulnerabilities(details['service'], details['version'])
        services[port]["vulns"] = [v["id"] for v in vulns] if vulns else []
    
    scan_results[machine] = services

#  Sauvegarde du rapport
save_report(scan_results)
print("Rapport généré : vulnerability_report.csv")

